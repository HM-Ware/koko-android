plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'signing'
}

// load local.properties file to be used for configuration
def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
    localProperties.each { name, value ->
        ext[name] = value
    }
}

def PUBLISH_GROUP_ID = 'com.hmware.android'
def PUBLISH_ARTIFACT_ID = 'koko'

def LIB_VERSION_NAME = '0.0.18'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName LIB_VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}


task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure Kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

afterEvaluate {
    signing {
        //sign configurations.archives
        sign publishing.publications
    }

    publishing {


        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = PUBLISH_GROUP_ID
                artifactId = PUBLISH_ARTIFACT_ID
                version = LIB_VERSION_NAME

                //include sources inside published artifacts
                artifact androidSourcesJar
                //artifact javadocJar

                // Mostly self-explanatory metadata
                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = 'KOKO Simlple Android Dependency Injection'
                    url = 'https://github.com/HM-Ware/koko-android'
                    licenses {
                        license {
                            name = 'Apache License'
                            url = 'https://github.com/HM-Ware/koko-android/blob/main/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'samehmikhail'
                            name = 'Sameh Mikhail'
                            email = 'sameh@hmware.com'
                        }
                        // Add all other devs here...
                    }

                    // Version control info - if you're using GitHub, follow the
                    // format as seen here
                    scm {
                        connection = 'scm:git:github.com/HM-Ware/koko-android.git'
                        developerConnection = 'scm:git:ssh://github.com/HM-Ware/koko-android.git'
                        url = 'https://github.com/HM-Ware/koko-android/tree/main'
                    }
                }
            }
        }

        repositories {
            maven {
                // change to point to your repo, e.g. http://my.org/repo
                //url = "https://oss.sonatype.org"
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                credentials {
                    username localProperties["sonatypeUsername"]
                    password localProperties["sonatypePassword"]
                }
            }
        }
    }


}

